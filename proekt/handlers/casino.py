import json
import random

from vkbottle import GroupEventType, Keyboard, EMPTY_KEYBOARD, Text, GroupTypes, KeyboardButtonColor
from vkbottle.bot import Message, BotLabeler, MessageEvent, Bot
import proekt.utils as utils
casino = BotLabeler()


@casino.message(payload={'menu': 'casino'})
async def casino_menu(message: Message):
    keyboard = EMPTY_KEYBOARD
    keyboard = Keyboard()

    keyboard.add(Text('–ú–æ–Ω–µ—Ç–∫–∞', {'casino': 'coin'}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text("–°—Ç–∞–∫–∞–Ω—á–∏–∫", {'casino': 'glass'}), color=KeyboardButtonColor.NEGATIVE)
    keyboard.row()
    keyboard.add(Text('–ö—É–±–∏–∫', {'casino': 'cube'}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text('–ú–µ–Ω—é', {'menu': 'menu'}))

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É", keyboard=keyboard, attachment='photo-223986632_456239022')

@casino.message(payload={'casino': 'coin'})
async def coin(message: Message):
    await message.answer("–î–ª—è –∏–≥—Ä—ã –Ω–∞–ø–∏—à–∏—Ç–µ: –ú–æ–Ω–µ—Ç–∫–∞  <–≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞>\n"
                         "–í —Å–ª—É—á–∞–µ –ø–æ–±–µ–¥—ã, –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1,9—Ö —Å–≤–æ–µ–π —Å—Ç–∞–≤–∫–∏\n"
                         "–í —Å–ª—É—á–∞–µ –ø—Ä–æ–∏–≥—Ä—ã—à–∞, –í—ã —Ç–µ—Ä—è–µ—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É")

@casino.message(payload={'casino': 'glass'})
async def glass(message: Message):
    await message.answer("–î–ª—è –∏–≥—Ä—ã –Ω–∞–ø–∏—à–∏—Ç–µ: –°—Ç–∞–∫–∞–Ω—á–∏–∫  <–≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞>\n"
                         "–í —Å–ª—É—á–∞–µ –ø–æ–±–µ–¥—ã, –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 2,8—Ö —Å–≤–æ–µ–π —Å—Ç–∞–≤–∫–∏\n"
                         "–í —Å–ª—É—á–∞–µ –ø—Ä–æ–∏–≥—Ä—ã—à–∞, –í—ã —Ç–µ—Ä—è–µ—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É")

@casino.message(payload={'casino': 'cube'})
async def glass(message: Message):
    await message.answer("–î–ª—è –∏–≥—Ä—ã –Ω–∞–ø–∏—à–∏—Ç–µ: –ö—É–±–∏–∫  <–≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞>\n"
                         "–í —Å–ª—É—á–∞–µ –ø–æ–±–µ–¥—ã, –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 5,5—Ö —Å–≤–æ–µ–π —Å—Ç–∞–≤–∫–∏\n"
                         "–í —Å–ª—É—á–∞–µ –ø—Ä–æ–∏–≥—Ä—ã—à–∞, –í—ã —Ç–µ—Ä—è–µ—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É")

@casino.message(text=['–ú–æ–Ω–µ—Ç–∫–∞ <bid>', '–º–æ–Ω–µ—Ç–∫–∞ <bid>'])
async def coin_play(message: Message, bid: int):
    user_db = utils.get_user_by_id(message.from_id)
    other = json.loads(user_db.other)
    bid = int(bid)
    if int(other['gold']) < int(bid):
        await message.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")
    elif int(bid) <= 0:
        await message.answer("–°–¥–µ–ª–∞–π—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É")
    elif int(other['gold']) >= int(bid):
        c = random.randint(1, 2)
        if c == 1:
            other['gold'] += int(bid*0.9)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.save()
            await message.answer(f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {int(int(bid)*0.9)}üí∞\n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å {other['gold']}üí∞")
        elif c == 2:
            other['gold'] -= int(bid)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.save()
            await message.answer(f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {bid}üí∞\n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å {other['gold']}üí∞")


@casino.message(text=['–°—Ç–∞–∫–∞–Ω—á–∏–∫ <bid>', '—Å—Ç–∞–∫–∞–Ω—á–∏–∫ <bid>'])
async def glass_play(message: Message, bid: int):
    user_db = utils.get_user_by_id(message.from_id)
    other = json.loads(user_db.other)
    bid = int(bid)
    if int(other['gold']) < int(bid):
        await message.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")
    elif int(bid) <= 0:
        await message.answer("–°–¥–µ–ª–∞–π—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É")
    elif int(other['gold']) >= int(bid):
        c = random.randint(1, 3)
        if c == 1:
            other['gold'] += int(bid*1.8)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.save()
            await message.answer(f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {int(int(bid)*1.8)}üí∞\n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å {other['gold']}üí∞")
        elif c == 2 or c == 3:
            other['gold'] -= int(bid)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.save()
            await message.answer(f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {bid}üí∞\n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å {other['gold']}üí∞")


@casino.message(text=['–ö—É–±–∏–∫ <bid>', '–∫—É–±–∏–∫ <bid>'])
async def coin_play(message: Message, bid: int):
    user_db = utils.get_user_by_id(message.from_id)
    other = json.loads(user_db.other)
    bid = int(bid)
    if int(other['gold']) < int(bid):
        await message.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")
    elif int(bid) <= 0:
        await message.answer("–°–¥–µ–ª–∞–π—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É")
    elif int(other['gold']) >= int(bid):
        c = random.randint(1, 6)
        if c == 1:
            other['gold'] += int(bid*5.5)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.save()
            await message.answer(f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {int(int(bid)*5.5)}üí∞\n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å {other['gold']}üí∞")
        elif c == 2 or c == 3 or c == 4 or c == 5 or c == 6:
            other['gold'] -= int(bid)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.save()
            await message.answer(f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {bid}üí∞\n"
                                 f"–í–∞—à –±–∞–ª–∞–Ω—Å {other['gold']}üí∞")