import json
from vkbottle import GroupEventType, Keyboard, EMPTY_KEYBOARD, Text, GroupTypes, KeyboardButtonColor
from vkbottle.bot import Message, BotLabeler, MessageEvent, Bot
import proekt.utils as utils
monsters = BotLabeler()


@monsters.message(payload={'menu': 'monsters'})
async def menu_monsters(message: Message):
    keyboard = EMPTY_KEYBOARD
    keyboard = Keyboard()
    keyboard.add(Text("–ú–æ–Ω—Å—Ç—Ä 1", {'monsters': '1'}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text("–ú–æ–Ω—Å—Ç—Ä 2", {'monsters': '2'}), color=KeyboardButtonColor.NEGATIVE)
    keyboard.row()
    keyboard.add(Text("–ú–æ–Ω—Å—Ç—Ä 3", {'monsters': '3'}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text('–ú–µ–Ω—é', {'menu': 'menu'}))

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞!", keyboard=keyboard)


@monsters.message(payload={'monsters': '1'})
async def monster_1(message: Message):
    user_db = utils.get_user_by_id(message.from_id)
    monster = json.loads(user_db.monsters)

    keyboard = EMPTY_KEYBOARD
    keyboard = Keyboard()
    keyboard.add(Text("–ê—Ç–∞–∫–æ–≤–∞—Ç—å", {'monster 1': 'attack'}), color=KeyboardButtonColor.NEGATIVE)
    keyboard.row()
    keyboard.add(Text("–ù–∞–∑–∞–¥", {'menu': 'monsters'}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text('–ú–µ–Ω—é', {'menu': 'menu'}))

    await message.answer("–°–ª–∏–∑–µ–Ω—å\n"
                         f"–ó–¥–æ—Ä–æ–≤—å–µ {monster['monster 1']['cur_hp']}/{monster['monster 1']['hp']}‚ô• –£—Ä–æ–Ω {monster['monster 1']['dmg']}üó°",
                         keyboard=keyboard, attachment='photo-223986632_456239018')

@monsters.message(payload={'monster 1': 'attack'})
async def attack_monster_1(message: Message):
    user_db = utils.get_user_by_id(message.from_id)
    user = json.loads(user_db.user)
    other = json.loads(user_db.other)
    monster = json.loads(user_db.monsters)

    if monster['monster 1']['cur_hp'] < 0:
        other['gold'] += monster['monster 1']['gold']
        user['exp'] += monster['monster 1']['exp']
        monster['monster 1']['cur_hp'] = monster['monster 1']['hp']
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.other = json.dumps(other, ensure_ascii=False)
        user_db.monsters = json.dumps(monster, ensure_ascii=False)
        user_db.save()
        await message.answer(f"–í—ã —É–±–∏–ª–∏ –°–ª–∏–∑–µ–Ω—è –∏ –ø–æ–ª—É—á–∏–ª–∏ {monster['monster 1']['gold']}üí∞ –∏ {monster['monster 1']['exp']}‚ú®")

    elif monster['monster 1']['dmg'] >= user['cur_hp']:
        user['cur_hp'] -= monster['monster 1']['dmg']
        if user['cur_hp'] < 0:
            user['cur_hp'] = 0
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.save()
        await message.answer("–í—ã –º–µ—Ä—Ç–≤—ã, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –±–æ–π!")

    elif monster['monster 1']['dmg'] < user['cur_hp']:
        user['cur_hp'] -= monster['monster 1']['dmg']
        monster['monster 1']['cur_hp'] -= user['cur_dmg']
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.monsters = json.dumps(monster, ensure_ascii=False)
        user_db.save()
        if monster['monster 1']['cur_hp'] < 0:
            other['gold'] += monster['monster 1']['gold']
            user['exp'] += monster['monster 1']['exp']
            monster['monster 1']['cur_hp'] = monster['monster 1']['hp']
            user_db.user = json.dumps(user, ensure_ascii=False)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.monsters = json.dumps(monster, ensure_ascii=False)
            user_db.save()
            await message.answer(
                f"–í—ã —É–±–∏–ª–∏ –°–ª–∏–∑–µ–Ω—è –∏ –ø–æ–ª—É—á–∏–ª–∏ {monster['monster 1']['gold']}üí∞ –∏ {monster['monster 1']['exp']}‚ú®")
        else:
            await message.answer(f"–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ {user['cur_hp']}‚ô•\n"
                             f"–ó–¥–æ—Ä–æ–≤—å–µ –º–æ–Ω—Å—Ç—Ä–∞ {monster['monster 1']['cur_hp']}‚ô•\n"
                             f"–í–∞–º –Ω–∞–Ω–µ—Å–ª–∏ {monster['monster 1']['dmg']}üó°, –∞ –≤—ã –Ω–∞–Ω–µ—Å–ª–∏ {user['cur_dmg']}üó°")


@monsters.message(payload={'monsters': '2'})
async def monster_2(message: Message):
    user_db = utils.get_user_by_id(message.from_id)
    monster = json.loads(user_db.monsters)

    keyboard = EMPTY_KEYBOARD
    keyboard = Keyboard()
    keyboard.add(Text("–ê—Ç–∞–∫–æ–≤–∞—Ç—å", {'monster 2': 'attack'}), color=KeyboardButtonColor.NEGATIVE)
    keyboard.row()
    keyboard.add(Text("–ù–∞–∑–∞–¥", {'menu': 'monsters'}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text('–ú–µ–Ω—é', {'menu': 'menu'}))

    await message.answer("–ì–æ–±–ª–∏–Ω\n"
                         f"–ó–¥–æ—Ä–æ–≤—å–µ {monster['monster 2']['cur_hp']}/{monster['monster 2']['hp']}‚ô• –£—Ä–æ–Ω {monster['monster 2']['dmg']}üó°",
                         keyboard=keyboard, attachment='photo-223986632_456239019')


@monsters.message(payload={'monster 2': 'attack'})
async def attack_monster_2(message: Message):
    user_db = utils.get_user_by_id(message.from_id)
    user = json.loads(user_db.user)
    other = json.loads(user_db.other)
    monster = json.loads(user_db.monsters)

    if monster['monster 2']['cur_hp'] < 0:
        other['gold'] += monster['monster 2']['gold']
        user['exp'] += monster['monster 2']['exp']
        monster['monster 2']['cur_hp'] = monster['monster 2']['hp']
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.other = json.dumps(other, ensure_ascii=False)
        user_db.monsters = json.dumps(monster, ensure_ascii=False)
        user_db.save()
        await message.answer(f"–í—ã —É–±–∏–ª–∏ –ì–æ–±–ª–∏–Ω–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ {monster['monster 2']['gold']}üí∞ –∏ {monster['monster 2']['exp']}‚ú®")

    elif monster['monster 2']['dmg'] >= user['cur_hp']:
        user['cur_hp'] -= monster['monster 2']['dmg']
        if user['cur_hp'] < 0:
            user['cur_hp'] = 0
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.save()
        await message.answer("–í—ã –º–µ—Ä—Ç–≤—ã, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –±–æ–π!")

    elif monster['monster 2']['dmg'] < user['cur_hp']:
        user['cur_hp'] -= monster['monster 2']['dmg']
        monster['monster 2']['cur_hp'] -= user['cur_dmg']
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.monsters = json.dumps(monster, ensure_ascii=False)
        user_db.save()
        if monster['monster 2']['cur_hp'] < 0:
            other['gold'] += monster['monster 2']['gold']
            user['exp'] += monster['monster 2']['exp']
            monster['monster 2']['cur_hp'] = monster['monster 2']['hp']
            user_db.user = json.dumps(user, ensure_ascii=False)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.monsters = json.dumps(monster, ensure_ascii=False)
            user_db.save()
            await message.answer(
                f"–í—ã —É–±–∏–ª–∏ –ì–æ–±–ª–∏–Ω–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ {monster['monster 2']['gold']}üí∞ –∏ {monster['monster 2']['exp']}‚ú®")
        else:
            await message.answer(f"–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ {user['cur_hp']}‚ô•\n"
                             f"–ó–¥–æ—Ä–æ–≤—å–µ –º–æ–Ω—Å—Ç—Ä–∞ {monster['monster 2']['cur_hp']}‚ô•\n"
                             f"–í–∞–º –Ω–∞–Ω–µ—Å–ª–∏ {monster['monster 2']['dmg']}üó°, –∞ –≤—ã –Ω–∞–Ω–µ—Å–ª–∏ {user['cur_dmg']}üó°")


@monsters.message(payload={'monsters': '3'})
async def monster_3(message: Message):
    user_db = utils.get_user_by_id(message.from_id)
    monster = json.loads(user_db.monsters)

    keyboard = EMPTY_KEYBOARD
    keyboard = Keyboard()
    keyboard.add(Text("–ê—Ç–∞–∫–æ–≤–∞—Ç—å", {'monster 3': 'attack'}), color=KeyboardButtonColor.NEGATIVE)
    keyboard.row()
    keyboard.add(Text("–ù–∞–∑–∞–¥", {'menu': 'monsters'}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text('–ú–µ–Ω—é', {'menu': 'menu'}))

    await message.answer("–û—Ä–∫\n"
                         f"–ó–¥–æ—Ä–æ–≤—å–µ {monster['monster 3']['cur_hp']}/{monster['monster 3']['hp']}‚ô• –£—Ä–æ–Ω {monster['monster 3']['dmg']}üó°",
                         keyboard=keyboard, attachment='photo-223986632_456239020')


@monsters.message(payload={'monster 3': 'attack'})
async def attack_monster_3(message: Message):
    user_db = utils.get_user_by_id(message.from_id)
    user = json.loads(user_db.user)
    other = json.loads(user_db.other)
    monster = json.loads(user_db.monsters)

    if monster['monster 3']['cur_hp'] < 0:
        other['gold'] += monster['monster 3']['gold']
        user['exp'] += monster['monster 3']['exp']
        monster['monster 3']['cur_hp'] = monster['monster 1']['hp']
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.other = json.dumps(other, ensure_ascii=False)
        user_db.monsters = json.dumps(monster, ensure_ascii=False)
        user_db.save()
        await message.answer(f"–í—ã —É–±–∏–ª–∏ –û—Ä–∫–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ {monster['monster 3']['gold']}üí∞ –∏ {monster['monster 3']['exp']}‚ú®")

    elif monster['monster 3']['dmg'] >= user['cur_hp']:
        user['cur_hp'] -= monster['monster 3']['dmg']
        if user['cur_hp'] < 0:
            user['cur_hp'] = 0
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.save()
        await message.answer("–í—ã –º–µ—Ä—Ç–≤—ã, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –±–æ–π!")

    elif monster['monster 3']['dmg'] < user['cur_hp']:
        user['cur_hp'] -= monster['monster 3']['dmg']
        monster['monster 3']['cur_hp'] -= user['cur_dmg']
        user_db.user = json.dumps(user, ensure_ascii=False)
        user_db.monsters = json.dumps(monster, ensure_ascii=False)
        user_db.save()
        if monster['monster 3']['cur_hp'] < 0:
            other['gold'] += monster['monster 3']['gold']
            user['exp'] += monster['monster 3']['exp']
            monster['monster 3']['cur_hp'] = monster['monster 3']['hp']
            user_db.user = json.dumps(user, ensure_ascii=False)
            user_db.other = json.dumps(other, ensure_ascii=False)
            user_db.monsters = json.dumps(monster, ensure_ascii=False)
            user_db.save()
            await message.answer(
                f"–í—ã —É–±–∏–ª–∏ –û—Ä–∫ –∏ –ø–æ–ª—É—á–∏–ª–∏ {monster['monster 3']['gold']}üí∞ –∏ {monster['monster 3']['exp']}‚ú®")
        else:
            await message.answer(f"–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ {user['cur_hp']}‚ô•\n"
                             f"–ó–¥–æ—Ä–æ–≤—å–µ –º–æ–Ω—Å—Ç—Ä–∞ {monster['monster 3']['cur_hp']}‚ô•\n"
                             f"–í–∞–º –Ω–∞–Ω–µ—Å–ª–∏ {monster['monster 3']['dmg']}üó°, –∞ –≤—ã –Ω–∞–Ω–µ—Å–ª–∏ {user['cur_dmg']}üó°")
